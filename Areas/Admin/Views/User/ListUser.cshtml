@using Cs_Plantlover.Models
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<User>
@{
    ViewData["Title"] = "ListUser";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";

    var btnDanger = "cancel btn btn-danger";
    var btnSucess = "cancel btn btn-success";
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
<h1 class="text-center">Danh sách người dùng</h1>

<p>
    <a class="btn btn-primary" asp-area="Identity" asp-page="/Account/Register"><i class="fas fa-plus"></i> &nbsp; Create New User</a>
</p>
<p>@TempData["Message"]</p>
<div class="order-details common-card">
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr class="card-header">
                    <th>Tên người dùng</th>
                    <th>Email</th>
                    <th>Địa chỉ</th>
                    <th>Số điện thoại</th>
                    <th>Role</th>
                    <th>Lock/Unlock</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="table-secondary">
                        <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Email)</td>
                        <td class="address-info">
                            @Html.DisplayFor(modelItem => item.Address),
                            @Html.DisplayFor(modelItem => item.Village),
                            @Html.DisplayFor(modelItem => item.District),
                            @Html.DisplayFor(modelItem => item.City)
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.PhoneNumber)</td>
                        <td>@Html.DisplayFor(modelItem => item.Role)</td>
                        <td>
                            @if (item.LockoutEnd > DateTimeOffset.Now)
                            {
                                <form asp-action="LockAccount" method="post" asp-route-id="@item.Id">
                                    <button type="submit" formnovalidate class="@btnDanger button-lock">
                                        <i class="fa-solid fa-lock"></i>
                                        Unlock
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form asp-action="LockAccount" method="post" asp-route-id="@item.Id">
                                    <button type="submit" formnovalidate class="@btnSucess button-lock">
                                        <i class="fa-solid fa-lock-open"></i>
                                        Lock
                                    </button>
                                </form>
                            }
                            <span class="lock-success-msg text-success" style="display: none;">Đã khóa</span>
                            <span class="lock-error-msg text-danger" style="display: none;">Khóa không thành công. Vui lòng thử lại sau.</span>
                        </td>
                        <td>
                            <form asp-action="DeleteUser" method="post">
                                <input type="hidden" name="Id" value="@item.Id" />
                                <button type="submit" class="button-icon">
                                    <i class="fa-solid fa-trash-can"></i>
                                </button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@Html.PagedListPager(Model, page => Url.Action("ListUser", new { page = page }), new PagedListRenderOptions()
{
    LiElementClasses = new List<string> { "page-item" },
    PageClasses = new List<string> { "page-link" }
})

<style>
    .button-icon {
        background: none;
        border: none;
        padding: 0;
        cursor: pointer;
        font-size: inherit;
        color: red;
    }

    .btn {
        padding: 0.875rem 1.5rem;
    }

    .button-lock {
        cursor: pointer;
    }

    .common-card {
        border: 1px solid #dee2e6;
        border-radius: 0.25rem;
        box-shadow: 0 2px 3px rgba(0, 0, 0, 0.3);
        margin-bottom: 20px;
    }

    .card-header {
        background-color: #7eae37;
        color: white;
        position: sticky;
        top: 0;
        z-index: 1;
    }

    .table-responsive {
        overflow-x: auto;
        width: 100%;
    }

    .order-details table {
        width: 100%;
        margin-top: 20px;
        border-collapse: separate;
    }

    .order-details thead th {
        position: sticky;
        top: 0;
        background-color: #7eae37; /* Ensure the header has the same background color */
        z-index: 2;
    }

    /* Optional: Customize the scrollbar */
    .table-responsive::-webkit-scrollbar {
        height: 12px;
    }

    .table-responsive::-webkit-scrollbar-track {
        background: #f1f1f1;
    }

    .table-responsive::-webkit-scrollbar-thumb {
        background: #7eae37;
    }

        .table-responsive::-webkit-scrollbar-thumb:hover {
            background: #555;
        }
</style>

<script>
    $(document).ready(function () {
        $('#confirmLockBtn').click(function () {
            var form = $('.lock-user-form');
            var button = form.find('.lock-user-btn');
            var row = form.closest('tr');

            // Gửi yêu cầu khóa người dùng
            $.post(form.attr('action'), form.serialize())
                .done(function () {
                    // Sau khi yêu cầu được hoàn thành, thay đổi văn bản và trạng thái của nút
                    button.text('Đã khóa').removeClass('btn-danger').addClass('btn-secondary').prop('disabled', true);
                    form.find('.lock-success-msg').show();
                    form.find('.lock-error-msg').hide();

                    // Thêm lớp 'locked-user' cho hàng
                    row.addClass('locked-user');
                })
                .fail(function () {
                    // Xử lý lỗi
                    form.find('.lock-success-msg').hide();
                    form.find('.lock-error-msg').show();
                });

            // Đóng modal
            $('#confirmLockModal').modal('hide');

            // Ngăn chặn gửi yêu cầu mặc định của form
            return false;
        });
    });
</script>
